<script type="text/javascript">

    var cbYearSelectedIndex = -1;

    function SetToolbarButtons(Status) {

        var Button = GridView.GetToolbar(0);

        switch (Status) {
            case "1":
                {
                    SettingsMenuButton(Button.GetItemByName("Btn_SendEmails"), false, "SubmitSmallGrey.png");
                    SettingsMenuButton(Button.GetItemByName("Btn_DeleteEmail"), true, "CancelSmall.png")
                }
                break;
            case "2":
                {
                    SettingsMenuButton(Button.GetItemByName("Btn_SendEmails"), true, "SubmitSmall.png");
                    SettingsMenuButton(Button.GetItemByName("Btn_DeleteEmail"), true, "CancelSmall.png")
                }
                break;
            case "3":
            case "4":
                {
                    SettingsMenuButton(Button.GetItemByName("Btn_SendEmails"), false, "SubmitSmallGrey.png");
                    SettingsMenuButton(Button.GetItemByName("Btn_DeleteEmail"), false, "CancelSmallGrey.png");
                }
                break;            
        }
    }

    //function SetDeleteButton(s, e) {
    //    GridView.GetRowValues(GridView.GetFocusedRowIndex(), "BulkEmailStatusID", _setEmailDeleteButton);
    //}

    //function _setEmailDeleteButton(values) {
    //    var Button = GridView.GetToolbar(0);

    //    if (values == 2)
    //        SettingsMenuButton(Button.GetItemByName("Btn_DeleteEmail"), true, "CancelSmall.png")
    //    else
    //        SettingsMenuButton(Button.GetItemByName("Btn_DeleteEmail"), false, "CancelSmallGrey.png")

    //}

    function onBtnConfirmDeleteEmailClick(Result) {

        if (Result == "mrYes") {

            var str = GridView.GetRowKey(GridView.GetFocusedRowIndex());
            var res = str.split("|");

            $.ajax({
                type: 'POST',
                url: '/BulkCorrespondence/DeleteBulkEmail',
                dataType: 'json',
                async: false,
                data: {
                    EmailTrackingKey: res[0]
                },
                success: function (result) {
                    if (result.Success === true) {
                        GridView.PerformCallback();
                    }
                }
            });
        }
    }

   
</script>

@Html.DevExpress().Splitter(settings =>
{
    SplitterUtils.SetSplitterProperties(settings, ViewData["ViewProperties"]);

    MVCxSplitterPane HeaderPane = (MVCxSplitterPane)settings.Panes[0];
    HeaderPane.SetContent(() =>
    {

        ViewContext.Writer.Write("<div ID=\"ViewInfo\">Bulk emails</div>");
        
    });

    MVCxSplitterPane MainContentPane = (MVCxSplitterPane)settings.Panes[1];
    MainContentPane.SetContent(() =>
    {

        Html.RenderAction("BulkEmailCorrespondencePartial");

    });

    MVCxSplitterPane FooterPane = (MVCxSplitterPane)settings.Panes[2];
    FooterPane.Separator.Visible = DefaultBoolean.True;
    FooterPane.SetContent(() =>
    {

        Html.RenderAction("BulkEmailTrackingHistoryPartial");

    });

}).GetHtml()

@MessageDlg.ShowMessageDlg("pcBulkEmailSending", Html, "The selected bulk emails are being sent.", new BtnType[] { BtnType.mbOK }, MessageType.mInformation)
@MessageDlg.ShowMessageDlg("pcDeleteEmail", Html, "Are you sure you want to delete the email?", new BtnType[] { BtnType.mbYes, BtnType.mbNo }, MessageType.mConfirmation, "onBtnConfirmDeleteEmailClick")