@model System.Collections.IEnumerable

<script type="text/javascript">

    function onConfirmation(Result) {
        if (Result == "mrYes") {
            //var YearID = AnnualParametersGridView.GetRowKey(AnnualParametersGridView.GetFocusedRowIndex());
            var AutoID = GridView.GetRowKey(GridView.GetFocusedRowIndex());

            $.ajax({
                type: 'POST',
                url: '/Admin/SchoolFeesAllUpdate',
                dataType: 'json',
                async: false,
                data: {
                    AutoID: AutoID
                }

            }).done(function (result) {
                GridView.PerformCallback({});
            });
        }
    }

    function onConfirmationSchoolFeesNext(Result) {
        if (Result == "mrYes") {
            var AutoID = SchoolFeesNextYearGridView.GetRowKey(SchoolFeesNextYearGridView.GetFocusedRowIndex());

            $.ajax({
                type: 'POST',
                url: '/Admin/SchoolFeesNextYearAllUpdate',
                dataType: 'json',
                async: false,
                data: {
                    AutoID: AutoID
                }

            }).done(function (result) {
                SchoolFeesNextYearGridView.PerformCallback({});
            });
        }
    }

    function SelectedIndexChanged() {

        switch (BillingCycleTypeID.GetSelectedIndex()) {
            case 0:
                {
                    lbAnnually.SetVisible(true);
                    IsBillingAnnualy.SetVisible(true);
                    lbAnnually.SetVisible(true);
                    lbMonthly.SetVisible(true);
                    IsBillngMonthly.SetVisible(true);
                    lbQuarterly.SetVisible(true);
                    IsBillingQuarterly.SetVisible(true);
                    lbInvoiceDates.SetVisible(true);
                    lbFirstQuarter.SetVisible(true);
                    Quarter1InvoiceDate.SetVisible(true);
                    lbAmount1.SetVisible(true);
                    Quarter1InvoiceAmount.SetVisible(true);
                    lbSecondQuarter.SetVisible(true);
                    Quarter2InvoiceDate.SetVisible(true);
                    lbAmount2.SetVisible(true);
                    Quarter2InvoiceAmount.SetVisible(true);
                    lbThirdQuarter.SetVisible(true);
                    Quarter3InvoiceDate.SetVisible(true);
                    lbAmount3.SetVisible(true);
                    Quarter3InvoiceAmount.SetVisible(true);
                    lbFouthQuarter.SetVisible(true);
                    Quarter4InvoiceDate.SetVisible(true);
                    lbAmount4.SetVisible(true);
                    Quarter4InvoiceAmount.SetVisible(true);
                }
                break;
            case 1:
            case 2:
                {
                    lbAnnually.SetVisible(false);
                    IsBillingAnnualy.SetVisible(false);
                    lbAnnually.SetVisible(false);
                    lbMonthly.SetVisible(false);
                    IsBillngMonthly.SetVisible(false);
                    lbQuarterly.SetVisible(false);
                    IsBillingQuarterly.SetVisible(false);
                    lbInvoiceDates.SetVisible(false);
                    lbFirstQuarter.SetVisible(false);
                    Quarter1InvoiceDate.SetVisible(false);
                    lbAmount1.SetVisible(false);
                    Quarter1InvoiceAmount.SetVisible(false);
                    lbSecondQuarter.SetVisible(false);
                    Quarter2InvoiceDate.SetVisible(false);
                    lbAmount2.SetVisible(false);
                    Quarter2InvoiceAmount.SetVisible(false);
                    lbThirdQuarter.SetVisible(false);
                    Quarter3InvoiceDate.SetVisible(false);
                    lbAmount3.SetVisible(false);
                    Quarter3InvoiceAmount.SetVisible(false);
                    lbFouthQuarter.SetVisible(false);
                    Quarter4InvoiceDate.SetVisible(false);
                    lbAmount4.SetVisible(false);
                    Quarter4InvoiceAmount.SetVisible(false);
                }
                break;
            case 3:
                {
                    lbAnnually.SetVisible(false);
                    IsBillingAnnualy.SetVisible(false);
                    lbAnnually.SetVisible(false);
                    lbMonthly.SetVisible(false);
                    IsBillngMonthly.SetVisible(false);
                    lbQuarterly.SetVisible(false);
                    IsBillingQuarterly.SetVisible(false);
                    lbInvoiceDates.SetVisible(true);
                    lbFirstQuarter.SetVisible(true);
                    Quarter1InvoiceDate.SetVisible(true);
                    lbAmount1.SetVisible(true);
                    Quarter1InvoiceAmount.SetVisible(true);
                    lbSecondQuarter.SetVisible(true);
                    Quarter2InvoiceDate.SetVisible(true);
                    lbAmount2.SetVisible(true);
                    Quarter2InvoiceAmount.SetVisible(true);
                    lbThirdQuarter.SetVisible(true);
                    Quarter3InvoiceDate.SetVisible(true);
                    lbAmount3.SetVisible(true);
                    Quarter3InvoiceAmount.SetVisible(true);
                    lbFouthQuarter.SetVisible(true);
                    Quarter4InvoiceDate.SetVisible(true);
                    lbAmount4.SetVisible(true);
                    Quarter4InvoiceAmount.SetVisible(true);
                }
                break;
        }

    }

    function onConfirmationBillingCycleUpdate(Result) {
        if (Result == "mrYes") {
            //var YearID = AnnualParametersGridView.GetRowKey(AnnualParametersGridView.GetFocusedRowIndex());
            var AutoID = GridView.GetRowKey(GridView.GetFocusedRowIndex());

            if (Quarter1InvoiceDate.GetDate() == null)
                var Quarter1Date = null
            else
                var Quarter1Date = Quarter1InvoiceDate.GetDate().toISOString()

            if (Quarter2InvoiceDate.GetDate() == null)
                var Quarter2Date = null
            else
                var Quarter2Date = Quarter2InvoiceDate.GetDate().toISOString()

            if (Quarter3InvoiceDate.GetDate() == null)
                var Quarter3Date = null
            else
                var Quarter3Date = Quarter3InvoiceDate.GetDate().toISOString()

            if (Quarter4InvoiceDate.GetDate() == null)
                var Quarter4Date = null
            else
                var Quarter4Date = Quarter4InvoiceDate.GetDate().toISOString()

            $.ajax({
                type: 'POST',
                url: '/Admin/SchoolFeesBillingCycleUpdate',
                dataType: 'json',
                async: false,
                data: {
                    BillingCycleTypeID: BillingCycleTypeID.GetValue(),
                    IsBillingAnnualy: IsBillingAnnualy.GetValue(),
                    IsBillngMonthly: IsBillngMonthly.GetValue(),
                    IsBillingQuarterly: IsBillingQuarterly.GetValue(),
                    Quarter1InvoiceDate: Quarter1Date,
                    Quarter1InvoiceAmount: Quarter1InvoiceAmount.GetValue(),
                    Quarter2InvoiceDate: Quarter2Date,
                    Quarter2InvoiceAmount: Quarter2InvoiceAmount.GetValue(),
                    Quarter3InvoiceDate: Quarter3Date,
                    Quarter3InvoiceAmount: Quarter3InvoiceAmount.GetValue(),
                    Quarter4InvoiceDate: Quarter4Date,
                    Quarter4InvoiceAmount: Quarter4InvoiceAmount.GetValue()
                }

            }).done(function (result) {
                GridView.PerformCallback({});
            });
        }
    }

</script>

@Html.DevExpress().Splitter(settings =>
{
    SplitterUtils.SetSplitterProperties(settings, true, 295, false, 0);

    settings.ClientSideEvents.PaneResized = "function(s, e) { if(e.pane.name == 'ViewMainContentPane') {GridView.SetHeight(e.pane.GetClientHeight() - 45); AdHocFeesGridView.SetHeight(e.pane.GetClientHeight() - 45); SchoolFeesNextYearGridView.SetHeight(e.pane.GetClientHeight() - 45);}}";

    MVCxSplitterPane HeaderPane = (MVCxSplitterPane)settings.Panes[0];
    HeaderPane.SetContent(() =>
    {
        ViewContext.Writer.Write("<div ID=\"ViewInfo\">School fees</div><div style=\"margin:2px\">");
        Html.DevExpress().RoundPanel(rpSettings =>
        {
            rpSettings.Name = "rpSchoolFeesSetup";
            rpSettings.HeaderText = "General settings";
            rpSettings.Width = Unit.Percentage(100);
            //rpSettings.AllowCollapsingByHeaderClick = true;
            //rpSettings.ShowCollapseButton = true;
            rpSettings.SetContent(() =>
            {
                Html.RenderAction("InstitutionSchoolFeePayments");
            });
        }).GetHtml();

    });

    MVCxSplitterPane MainContentPane = (MVCxSplitterPane)settings.Panes[1];
    MainContentPane.SetContent(() =>
    {

        Html.DevExpress().PageControl(pcsettings =>
        {
            pcsettings.Name = "pcSchoolFees";
            pcsettings.Width = Unit.Percentage(100);
            pcsettings.Height = Unit.Percentage(100);
            pcsettings.EnableTabScrolling = true;
            pcsettings.TabAlign = TabAlign.Justify;
            pcsettings.EnableClientSideAPI = true;

            pcsettings.TabPages.Add("School fees", "SchoolFees").SetContent(() =>
            {
                Html.RenderAction("SetupSchoolFeesPartial");
            });

            pcsettings.TabPages.Add("School fees next year", "SchoolFeesNextYear").SetContent(() =>
            {
                Html.RenderAction("SetupSchoolFeesNextYearPartial");
            });

            pcsettings.TabPages.Add("Billing Cycle", "BillingCycle").SetContent(() =>
            {
                Html.RenderAction("SetupSchoolFeesBillingCyclePartial");
            });

            pcsettings.TabPages.Add("Ad Hoc fees", "AdHocFees").SetContent(() =>
            {
                Html.RenderAction("SetupAdHocFeesPartial");
            });

        }).GetHtml();

    });

    MVCxSplitterPane FooterPane = (MVCxSplitterPane)settings.Panes[2];
    FooterPane.SetContent(() =>
    {

    });

}).GetHtml()


@MessageDlg.ShowMessageDlg("pcConfirm", Html, "Are you sure you want to copy the selected fees to all the grades?", new BtnType[] { BtnType.mbYes, BtnType.mbNo }, MessageType.mConfirmation, "onConfirmation")
@MessageDlg.ShowMessageDlg("pcConfirmSchoolFeesNext", Html, "Are you sure you want to copy the selected fees to all the grades?", new BtnType[] { BtnType.mbYes, BtnType.mbNo }, MessageType.mConfirmation, "onConfirmationSchoolFeesNext")
@MessageDlg.ShowMessageDlg("pcConfirmBillingCycleUpdate", Html, "Are you sure you want to save?", new BtnType[] { BtnType.mbYes, BtnType.mbNo }, MessageType.mConfirmation, "onConfirmationBillingCycleUpdate")

@Html.DevExpress().LoadingPanel(settings =>
{
    settings.Name = "LoadingPanel";
    settings.Modal = true;
    settings.Text = "Update School Fees.</br>This can take a few minutes.";
}).GetHtml()