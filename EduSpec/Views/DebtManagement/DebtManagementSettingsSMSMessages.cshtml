@Html.DevExpress().GridView(settings =>
{
    GridUtils.SetGridViewProperties(settings, settings.CommandColumn, ViewData["SMSViewProperties"]);

    settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "DebtManagement", Action = "SMSMessageUpdate" };
    settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "DebtManagement", Action = "SMSMessageAdd" };

    settings.SetEditFormTemplateContent(c =>
    {
        var SMSMessages = ViewData["SMSMessages"] != null ? ViewData["SMSMessages"] : c.DataItem;

        List<Int32> checkValuesLanguage = new List<Int32> { 1 };

        ViewContext.Writer.Write("<table class=\"CheckListTable\">");
        ViewContext.Writer.Write("<tr><td class=\"CheckListTable-l\" style=\"width:350px\">");
        ViewContext.Writer.Write("<div class=\"edit_form\" style=\"width: 100%; margin:0px 3px 0px 5px;\">");
        ViewContext.Writer.Write("<div class=\"line\" style=\"width: 100%; margin:0px;\">");

        ViewData["InstSMSID"] = DataBinder.Eval(SMSMessages, "InstSMSID");

        Html.DevExpress().Label(cbSettings =>
        {
            cbSettings.Name = "MessageDescription";
            cbSettings.ControlStyle.CssClass = "label";
            cbSettings.Text = "Message description: ";
        }).GetHtml();

        @Html.DevExpress().TextBox(edtSettings =>
        {
            edtSettings.Name = "Description";
            edtSettings.ControlStyle.CssClass = "formeditor";
            edtSettings.Height = 20;
            edtSettings.ShowModelErrors = true;
        }).Bind(DataBinder.Eval(SMSMessages, "Description")).GetHtml();


        ViewContext.Writer.Write("<div class=\"line\" style=\"width: 100%; margin:10px 10px 0px; 10px\">");

        EduSpecHtmlHelper.Label(Html, "English: ", "boldlabel");

        using (Html.BeginForm())
        {
            if (DataBinder.Eval(SMSMessages, "Message_ENG") == null)
                Html.RenderPartial("MessageEditorLegal_ENG", "");
            else
                Html.RenderPartial("MessageEditorLegal_ENG", DataBinder.Eval(SMSMessages, "Message_ENG"));

        EduSpecHtmlHelper.Label(Html, "Afrikaans: ", "boldlabel");

            if (DataBinder.Eval(SMSMessages, "Message_AFR") == null)
                Html.RenderPartial("MessageEditorLegal_AFR", "");
            else
                Html.RenderPartial("MessageEditorLegal_AFR", DataBinder.Eval(SMSMessages, "Message_AFR"));
        }

        ViewContext.Writer.Write("</div></div></td>");
        ViewContext.Writer.Write("<td class=\"CheckListTable-r\" style=\"width:230px\">");
        ViewContext.Writer.Write("<div class=\"edit_form\" style=\"width: 100%; margin:0px 5px 0px 5px;\">");
        ViewContext.Writer.Write("<div class=\"line\" style=\"width: 100%; margin:0px;\">");

        Html.DevExpress().ListBox(
        lbsettings =>
        {
            lbsettings.Name = "PlaceHolders";
            lbsettings.Width = 225;
            lbsettings.Height = 300;
            lbsettings.Properties.Caption = "Placeholders:";
            lbsettings.Properties.CaptionSettings.Position = EditorCaptionPosition.Top;
            lbsettings.Properties.SelectionMode = ListEditSelectionMode.Single;
            lbsettings.Properties.ValueField = "ID";
            lbsettings.Properties.ValueType = typeof(Int32);
            lbsettings.Properties.TextField = "Description";
            lbsettings.Properties.ClientSideEvents.ItemDoubleClick = "OnCLickSMSBulk";
        }).BindList(EduSpec.GridUtils.getDropdownList("Get_PlaceHolders_PickList 2")).GetHtml();

        ViewContext.Writer.Write("<br />To insert one of the above placeholders place your cursor at the exact position where you need the placeholder to be inserted. By double clicking on the required placeholder the placeholder will be inserted into the document.");



        ViewContext.Writer.Write("</div></div></td></tr></table>");

        ViewContext.Writer.Write("<div class=\"edit_form\" style=\"width: 100%; margin:0px 5px 0px 5px;\">");
        ViewContext.Writer.Write("<div class=\"line\" style=\"width: 100%; margin:10px 10px 0px; 10px\">");

        Html.DevExpress().Button(btnSettings =>
        {
            btnSettings.Name = "btnUpdate";
            btnSettings.ControlStyle.CssClass = "button";
            btnSettings.Text = "Update";
            if (c.KeyValue == null)
            {
                btnSettings.Text = "Save";
                btnSettings.ClientSideEvents.Click = String.Format("function(s, e) {{{0}.UpdateEdit(); }}", settings.Name);
            }
            else
            {
                btnSettings.Text = "Update";
                btnSettings.ClientSideEvents.Click = String.Format("function(s, e) {{{0}.UpdateEdit(); }}", settings.Name);
            }
        }).GetHtml();

        Html.DevExpress().Button(btnSettings =>
        {
            btnSettings.Name = "btnCancel";
            btnSettings.ControlStyle.CssClass = "button";
            btnSettings.Text = "Cancel";
            btnSettings.ClientSideEvents.Click = String.Format("function(s, e) {{{0}.CancelEdit(); }}", settings.Name);
        }).GetHtml();

        ViewContext.Writer.Write("</div></div>");

        settings.PreRender = (sender, e) =>
        {
            ((MVCxGridView)sender).StartEdit(1);
        };

    });


}).Bind(Model).GetHtml()




